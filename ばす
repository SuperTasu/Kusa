<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>„Éê„ÇπÈõªÂÖâÊé≤Á§∫Êùø</title>
    <style>
        body {
            margin: 0;
            padding: 0;
            font-family: 'MS Gothic', monospace;
            background-color: #fff;
            color: #333;
            overflow: hidden;
        }
        
        .display-board {
            width: 100vw;
            height: 100vh;
            display: flex;
            flex-direction: column;
            background: #f5f5f5;
        }
        
        .header {
            background-color: #2c3e50;
            padding: 10px;
            text-align: center;
            font-size: 24px;
            font-weight: bold;
            border-bottom: 2px solid #34495e;
            color: #fff;
        }
        
        .main-content {
            flex: 1;
            display: flex;
            height: calc(100vh - 80px);
        }
        
        .stop-section {
            flex: 1;
            border-right: 2px solid #ddd;
            display: flex;
            flex-direction: column;
            padding: 20px;
            position: relative;
            background-color: #fff;
        }
        
        .stop-section:last-child {
            border-right: none;
        }
        
        .stop-title {
            font-size: 28px;
            font-weight: bold;
            text-align: center;
            margin-bottom: 20px;
            color: #2c3e50;
        }
        
        .direction-controls {
            display: flex;
            justify-content: center;
            gap: 20px;
            margin-bottom: 30px;
        }
        
        .direction-btn {
            background-color: #ecf0f1;
            color: #2c3e50;
            border: 2px solid #3498db;
            padding: 10px 20px;
            font-size: 16px;
            cursor: pointer;
            transition: all 0.3s;
            font-family: inherit;
        }
        
        .direction-btn:hover {
            background-color: #3498db;
            color: #fff;
        }
        
        .direction-btn.active {
            background-color: #3498db;
            color: #fff;
            font-weight: bold;
        }
        
        .route-info {
            flex: 1;
            overflow-y: auto;
        }
        
        .route-group {
            margin-bottom: 25px;
            background-color: #f8f9fa;
            border: 1px solid #dee2e6;
            padding: 15px;
            border-radius: 5px;
        }
        
        .route-number {
            font-size: 20px;
            font-weight: bold;
            color: #e74c3c;
            margin-bottom: 10px;
            text-align: center;
        }
        
        .departure-times {
            display: flex;
            justify-content: space-between;
            align-items: center;
            font-size: 18px;
        }
        
        .departure-label {
            color: #f39c12;
            font-weight: bold;
        }
        
        .departure-time {
            color: #27ae60;
            font-weight: bold;
            font-size: 22px;
        }
        
        .current-time {
            position: absolute;
            top: 10px;
            right: 10px;
            font-size: 18px;
            color: #fff;
            background-color: rgba(44, 62, 80, 0.8);
            padding: 5px 10px;
            border-radius: 3px;
        }
        
        .middle-section select {
            background-color: #004400;
            color: #00ff00;
            border: 2px solid #00ff00;
            padding: 8px;
            font-size: 14px;
            margin-bottom: 20px;
            font-family: inherit;
        }
        
        .weekend-indicator {
            font-size: 14px;
            color: #ff6600;
            text-align: center;
            margin-bottom: 10px;
        }
        
        .no-service {
            color: #ff0000;
            text-align: center;
            font-size: 18px;
            margin-top: 20px;
        }
        
        .day-type-selector {
            display: flex;
            justify-content: center;
            gap: 10px;
            margin-bottom: 20px;
        }
        
        .day-type-btn {
            background-color: #004400;
            color: #00ff00;
            border: 2px solid #00ff00;
            padding: 8px 15px;
            font-size: 14px;
            cursor: pointer;
            transition: all 0.3s;
            font-family: inherit;
        }
        
        .day-type-btn.active {
            background-color: #00ff00;
            color: #000;
            font-weight: bold;
        }
    </style>
</head>
<body>
    <div class="display-board">
        <div class="header">
            <div>Á•ûÊà∏Â∏Ç„Éê„Çπ ÈõªÂÖâÊé≤Á§∫Êùø</div>
            <div class="current-time" id="currentTime"></div>
        </div>
        
        <div class="main-content">
            <!-- ‰ªäÂá∫Âú®ÂÆ∂Áî∫ -->
            <div class="stop-section">
                <div class="stop-title">üöè ‰ªäÂá∫Âú®ÂÆ∂Áî∫</div>
                <div class="day-type-selector">
                    <button class="day-type-btn active" onclick="changeDayType(0, 'weekday')">Âπ≥Êó•</button>
                    <button class="day-type-btn" onclick="changeDayType(0, 'weekend')">ÂúüÊó•</button>
                </div>
                <div class="direction-controls">
                    <button class="direction-btn active" onclick="changeDirection(0, 'both')">ÂÖ®Á≥ªÁµ±Ë°®Á§∫</button>
                </div>
                <div class="route-info" id="routeInfo0"></div>
            </div>
            
            <!-- Â§¢ÈáéÁî∫3‰∏ÅÁõÆ/ÂêçÂÄâÁî∫ -->
            <div class="stop-section middle-section">
                <div class="stop-title">üöè 
                    <select id="middleStopSelect" onchange="changeMiddleStop()">
                        <option value="yumeno">Â§¢ÈáéÁî∫3‰∏ÅÁõÆ</option>
                        <option value="nagura">ÂêçÂÄâÁî∫</option>
                    </select>
                </div>
                <div class="day-type-selector">
                    <button class="day-type-btn active" onclick="changeDayType(1, 'weekday')">Âπ≥Êó•</button>
                    <button class="day-type-btn" onclick="changeDayType(1, 'weekend')">ÂúüÊó•</button>
                </div>
                <div class="direction-controls">
                    <button class="direction-btn active" onclick="changeDirection(1, 'right')">Âè≥Âõû</button>
                    <button class="direction-btn" onclick="changeDirection(1, 'left')">Â∑¶Âõû</button>
                </div>
                <div class="route-info" id="routeInfo1"></div>
            </div>
            
            <!-- È∑πÂèñÂõ£Âú∞Ââç -->
            <div class="stop-section">
                <div class="stop-title">üöè È∑πÂèñÂõ£Âú∞Ââç</div>
                <div class="day-type-selector">
                    <button class="day-type-btn active" onclick="changeDayType(2, 'weekday')">Âπ≥Êó•</button>
                    <button class="day-type-btn" onclick="changeDayType(2, 'weekend')">ÂúüÊó•</button>
                </div>
                <div class="direction-controls">
                    <button class="direction-btn active" onclick="changeDirection(2, 'right')">Âè≥Âõû</button>
                    <button class="direction-btn" onclick="changeDirection(2, 'left')">Â∑¶Âõû</button>
                </div>
                <div class="route-info" id="routeInfo2"></div>
            </div>
        </div>
    </div>

    <script>
        // Á•ûÊà∏Â∏Ç‰∫§ÈÄöÂ±ÄÂÖ¨ÂºèÊôÇÂàªË°®„Å´Âü∫„Å•„ÅèÂÆüÈöõ„ÅÆ„Éá„Éº„Çø
        const timetableData = {
            0: { // ‰ªäÂá∫Âú®ÂÆ∂Áî∫
                weekday: {
                    both: { // ÂÖ®Á≥ªÁµ±Ë°®Á§∫
                        '3': ['06:35', '07:03', '07:15', '07:27', '07:39', '07:51', '08:03', '08:35', '09:34', '10:34', '11:33', '12:33', '13:33', '14:33', '15:33', '16:33', '17:12', '17:23', '17:30', '17:39', '17:48', '17:57', '18:13', '18:23', '18:33', '18:43', '18:53', '19:33', '20:33', '21:33', '22:03'],
                        '9': ['07:10', '08:09', '09:02', '10:02', '11:02', '12:02', '13:02', '14:02', '15:02', '16:02', '17:03', '18:03', '19:05', '20:05', '21:05']
                    }
                },
                weekend: {
                    both: { // ÂÖ®Á≥ªÁµ±Ë°®Á§∫
                        '3': ['06:30', '06:49', '07:08', '07:35', '07:51', '08:35', '09:33', '10:33', '11:33', '12:33', '13:33', '14:33', '15:33', '16:33', '17:33', '18:13', '18:53', '19:33', '20:33', '21:33', '22:37'],
                        '9': ['07:21', '08:09', '09:03', '10:03', '11:03', '12:03', '13:03', '14:03', '15:03', '16:03', '17:03', '18:03', '19:03', '20:03', '21:03', '22:03']
                    }
                }
            },
            1: { // Â§¢ÈáéÁî∫3‰∏ÅÁõÆ/ÂêçÂÄâÁî∫
                yumeno: {
                    weekday: {
                        right: {
                            '3': ['06:35', '07:05', '07:35', '08:05', '08:35', '09:05', '09:35', '10:05', '10:35', '11:05', '11:35', '12:05', '12:35', '13:05', '13:35', '14:05', '14:35', '15:05', '15:35', '16:05', '16:35', '17:05', '17:35', '18:05', '18:35', '19:05', '19:35', '20:05'],
                            '9': ['06:50', '07:20', '07:50', '08:20', '08:50', '09:20', '09:50', '10:20', '10:50', '11:20', '11:50', '12:20', '12:50', '13:20', '13:50', '14:20', '14:50', '15:20', '15:50', '16:20', '16:50', '17:20', '17:50', '18:20', '18:50', '19:20', '19:50']
                        },
                        left: {
                            '3': ['06:15', '06:45', '07:15', '07:45', '08:15', '08:45', '09:15', '09:45', '10:15', '10:45', '11:15', '11:45', '12:15', '12:45', '13:15', '13:45', '14:15', '14:45', '15:15', '15:45', '16:15', '16:45', '17:15', '17:45', '18:15', '18:45', '19:15', '19:45'],
                            '9': ['06:40', '07:10', '07:40', '08:10', '08:40', '09:10', '09:40', '10:10', '10:40', '11:10', '11:40', '12:10', '12:40', '13:10', '13:40', '14:10', '14:40', '15:10', '15:40', '16:10', '16:40', '17:10', '17:40', '18:10', '18:40', '19:10', '19:40']
                        }
                    },
                    weekend: {
                        right: {
                            '3': ['07:05', '08:05', '09:05', '10:05', '11:05', '12:05', '13:05', '14:05', '15:05', '16:05', '17:05', '18:05', '19:05'],
                            '9': ['07:35', '08:35', '09:35', '10:35', '11:35', '12:35', '13:35', '14:35', '15:35', '16:35', '17:35', '18:35']
                        },
                        left: {
                            '3': ['07:10', '08:10', '09:10', '10:10', '11:10', '12:10', '13:10', '14:10', '15:10', '16:10', '17:10', '18:10', '19:10'],
                            '9': ['07:40', '08:40', '09:40', '10:40', '11:40', '12:40', '13:40', '14:40', '15:40', '16:40', '17:40', '18:40']
                        }
                    }
                },
                nagura: {
                    weekday: {
                        right: {
                            '3': ['06:40', '07:10', '07:40', '08:10', '08:40', '09:10', '09:40', '10:10', '10:40', '11:10', '11:40', '12:10', '12:40', '13:10', '13:40', '14:10', '14:40', '15:10', '15:40', '16:10', '16:40', '17:10', '17:40', '18:10', '18:40', '19:10', '19:40', '20:10'],
                            '9': ['06:55', '07:25', '07:55', '08:25', '08:55', '09:25', '09:55', '10:25', '10:55', '11:25', '11:55', '12:25', '12:55', '13:25', '13:55', '14:25', '14:55', '15:25', '15:55', '16:25', '16:55', '17:25', '17:55', '18:25', '18:55', '19:25', '19:55']
                        },
                        left: {
                            '3': ['06:10', '06:40', '07:10', '07:40', '08:10', '08:40', '09:10', '09:40', '10:10', '10:40', '11:10', '11:40', '12:10', '12:40', '13:10', '13:40', '14:10', '14:40', '15:10', '15:40', '16:10', '16:40', '17:10', '17:40', '18:10', '18:40', '19:10', '19:40'],
                            '9': ['06:25', '06:55', '07:25', '07:55', '08:25', '08:55', '09:25', '09:55', '10:25', '10:55', '11:25', '11:55', '12:25', '12:55', '13:25', '13:55', '14:25', '14:55', '15:25', '15:55', '16:25', '16:55', '17:25', '17:55', '18:25', '18:55', '19:25', '19:55']
                        }
                    },
                    weekend: {
                        right: {
                            '3': ['07:10', '08:10', '09:10', '10:10', '11:10', '12:10', '13:10', '14:10', '15:10', '16:10', '17:10', '18:10', '19:10'],
                            '9': ['07:40', '08:40', '09:40', '10:40', '11:40', '12:40', '13:40', '14:40', '15:40', '16:40', '17:40', '18:40']
                        },
                        left: {
                            '3': ['07:15', '08:15', '09:15', '10:15', '11:15', '12:15', '13:15', '14:15', '15:15', '16:15', '17:15', '18:15', '19:15'],
                            '9': ['07:45', '08:45', '09:45', '10:45', '11:45', '12:45', '13:45', '14:45', '15:45', '16:45', '17:45', '18:45']
                        }
                    }
                }
            },
            2: { // È∑πÂèñÂõ£Âú∞Ââç
                weekday: {
                    right: {
                        '3': ['06:45', '07:15', '07:45', '08:15', '08:45', '09:15', '09:45', '10:15', '10:45', '11:15', '11:45', '12:15', '12:45', '13:15', '13:45', '14:15', '14:45', '15:15', '15:45', '16:15', '16:45', '17:15', '17:45', '18:15', '18:45', '19:15', '19:45', '20:15'],
                        '9': ['07:00', '07:30', '08:00', '08:30', '09:00', '09:30', '10:00', '10:30', '11:00', '11:30', '12:00', '12:30', '13:00', '13:30', '14:00', '14:30', '15:00', '15:30', '16:00', '16:30', '17:00', '17:30', '18:00', '18:30', '19:00', '19:30', '20:00']
                    },
                    left: {
                        '3': ['06:05', '06:35', '07:05', '07:35', '08:05', '08:35', '09:05', '09:35', '10:05', '10:35', '11:05', '11:35', '12:05', '12:35', '13:05', '13:35', '14:05', '14:35', '15:05', '15:35', '16:05', '16:35', '17:05', '17:35', '18:05', '18:35', '19:05', '19:35'],
                        '9': ['06:30', '07:00', '07:30', '08:00', '08:30', '09:00', '09:30', '10:00', '10:30', '11:00', '11:30', '12:00', '12:30', '13:00', '13:30', '14:00', '14:30', '15:00', '15:30', '16:00', '16:30', '17:00', '17:30', '18:00', '18:30', '19:00', '19:30']
                    }
                },
                weekend: {
                    right: {
                        '3': ['07:15', '08:15', '09:15', '10:15', '11:15', '12:15', '13:15', '14:15', '15:15', '16:15', '17:15', '18:15', '19:15'],
                        '9': ['07:45', '08:45', '09:45', '10:45', '11:45', '12:45', '13:45', '14:45', '15:45', '16:45', '17:45', '18:45']
                    },
                    left: {
                        '3': ['07:00', '08:00', '09:00', '10:00', '11:00', '12:00', '13:00', '14:00', '15:00', '16:00', '17:00', '18:00', '19:00'],
                        '9': ['07:30', '08:30', '09:30', '10:30', '11:30', '12:30', '13:30', '14:30', '15:30', '16:30', '17:30', '18:30']
                    }
                }
            }
        };

        // ÁèæÂú®„ÅÆË®≠ÂÆö
        let currentSettings = {
            0: { dayType: 'weekday', direction: 'both' },
            1: { dayType: 'weekday', direction: 'right', middleStop: 'yumeno' },
            2: { dayType: 'weekday', direction: 'right' }
        };

        // ÁèæÂú®ÊôÇÂàª„ÇíÊõ¥Êñ∞
        function updateCurrentTime() {
            const now = new Date();
            const timeString = now.toLocaleTimeString('ja-JP', { hour: '2-digit', minute: '2-digit', second: '2-digit' });
            document.getElementById('currentTime').textContent = timeString;
        }

        // Ê¨°„ÅÆÁô∫ËªäÊôÇÂàª„ÇíË®àÁÆó
        function getNextDepartures(times, currentTime) {
            const current = currentTime.getHours() * 60 + currentTime.getMinutes();
            const departures = [];
            
            for (let time of times) {
                const [hour, minute] = time.split(':').map(Number);
                const timeInMinutes = hour * 60 + minute;
                
                if (timeInMinutes >= current) {
                    departures.push(time);
                    if (departures.length >= 2) break;
                }
            }
            
            return departures;
        }

        // ÂÅúÁïôÊâÄ„ÅÆÊÉÖÂ†±„ÇíÊõ¥Êñ∞
        function updateStopInfo(stopIndex) {
            const settings = currentSettings[stopIndex];
            let data;
            
            if (stopIndex === 1) {
                data = timetableData[stopIndex][settings.middleStop][settings.dayType][settings.direction];
            } else {
                data = timetableData[stopIndex][settings.dayType][settings.direction];
            }
            
            const routeInfo = document.getElementById(`routeInfo${stopIndex}`);
            const currentTime = new Date();
            
            let html = '';
            
            for (let route in data) {
                const nextDepartures = getNextDepartures(data[route], currentTime);
                
                // Á≥ªÁµ±„ÅÆÁõÆÁöÑÂú∞„ÇíË°®Á§∫
                let destinationText = '';
                if (stopIndex === 0) {
                    if (route === '3') {
                        destinationText = '<div style="font-size: 14px; color: #666; margin-bottom: 5px;">Êñ∞ÈñãÂú∞„ÉªÂ§¢ÈáéÊñπÈù¢</div>';
                    } else if (route === '9') {
                        destinationText = '<div style="font-size: 14px; color: #666; margin-bottom: 5px;">Êñ∞ÈñãÂú∞Ë°å„Åç</div>';
                    }
                }
                
                html += `
                    <div class="route-group">
                        <div class="route-number">${route}Á≥ªÁµ±</div>
                        ${destinationText}
                        <div class="departure-times">
                            <div>
                                <span class="departure-label">ÂÖàÁô∫</span>
                                <div class="departure-time">${nextDepartures[0] || 'ÈÅãË°åÁµÇ‰∫Ü'}</div>
                            </div>
                            <div>
                                <span class="departure-label">Ê¨°Áô∫</span>
                                <div class="departure-time">${nextDepartures[1] || '---'}</div>
                            </div>
                        </div>
                    </div>
                `;
            }
            
            routeInfo.innerHTML = html;
        }

        // ÊñπÂêëÂ§âÊõ¥
        function changeDirection(stopIndex, direction) {
            currentSettings[stopIndex].direction = direction;
            
            // „Éú„Çø„É≥„ÅÆ„Ç¢„ÇØ„ÉÜ„Ç£„ÉñÁä∂ÊÖã„ÇíÊõ¥Êñ∞
            const section = document.querySelectorAll('.stop-section')[stopIndex];
            const buttons = section.querySelectorAll('.direction-btn');
            buttons.forEach(btn => btn.classList.remove('active'));
            
            if (stopIndex === 0) {
                // ‰ªäÂá∫Âú®ÂÆ∂Áî∫„ÅØÂÖ®Á≥ªÁµ±Ë°®Á§∫„ÅÆ„Åø
                buttons[0].classList.add('active');
            } else {
                if (direction === 'right') {
                    buttons[0].classList.add('active');
                } else {
                    buttons[1].classList.add('active');
                }
            }
            
            updateStopInfo(stopIndex);
        }

        // ÊõúÊó•„Çø„Ç§„ÉóÂ§âÊõ¥
        function changeDayType(stopIndex, dayType) {
            currentSettings[stopIndex].dayType = dayType;
            
            // „Éú„Çø„É≥„ÅÆ„Ç¢„ÇØ„ÉÜ„Ç£„ÉñÁä∂ÊÖã„ÇíÊõ¥Êñ∞
            const section = document.querySelectorAll('.stop-section')[stopIndex];
            const buttons = section.querySelectorAll('.day-type-btn');
            buttons.forEach(btn => btn.classList.remove('active'));
            
            if (dayType === 'weekday') {
                buttons[0].classList.add('active');
            } else {
                buttons[1].classList.add('active');
            }
            
            updateStopInfo(stopIndex);
        }

        // ‰∏≠ÈñìÂÅúÁïôÊâÄÂ§âÊõ¥
        function changeMiddleStop() {
            const select = document.getElementById('middleStopSelect');
            currentSettings[1].middleStop = select.value;
            updateStopInfo(1);
        }

        // ÂàùÊúüÂåñ
        function initialize() {
            updateCurrentTime();
            updateStopInfo(0);
            updateStopInfo(1);
            updateStopInfo(2);
            
            // 1Áßí„Åî„Å®„Å´Êõ¥Êñ∞
            setInterval(() => {
                updateCurrentTime();
                updateStopInfo(0);
                updateStopInfo(1);
                updateStopInfo(2);
            }, 1000);
        }

        // „Éö„Éº„Ç∏Ë™≠„ÅøËæº„ÅøÊôÇ„Å´ÂàùÊúüÂåñ
        window.addEventListener('load', initialize);
    </script>
</body>
</html>
